package ${package.Controller};

import cn.hutool.core.util.StrUtil;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.xing.springboot.xtUtils.common.Result;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.List;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass}{
#else
public class ${table.controllerName}{
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @PostMapping  // 更新保存
    public Result save(@RequestBody ${entity} ${table.entityPath}){
        return Result.success(${table.entityPath}Service.saveOrUpdate(${table.entityPath}));
    }

    @DeleteMapping("/{id}")  // 删除
    public Result delete(@PathVariable Integer id){
        return Result.success(${table.entityPath}Service.removeById(id));
    }

    @PostMapping("/del/batch")  // 批量删除
    public Result deleteBatch(@RequestBody List<Integer> ids){
        return Result.success(${table.entityPath}Service.removeBatchByIds(ids));
    }

    @GetMapping("/list")   // 查询所有
    public Result findAll(){
        return Result.success(${table.entityPath}Service.list());
    }

    @GetMapping("/{id}")  // 查询单个
    public Result findOne(@PathVariable Integer id){
        return Result.success(${table.entityPath}Service.getById(id));
   }

    @GetMapping("/page")  // 分页
    public Result findPage(@RequestParam Integer pageNum,
                                                        @RequestParam Integer pageSize,
                                                        @RequestParam(defaultValue = "" ) String name
        ){
        Page<${entity}> page=new Page<>(pageNum,pageSize);
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<>();
        if (StrUtil.isNotBlank(name)) {
            queryWrapper.or().like("id", name);
        }
        queryWrapper.orderByDesc("id");
        return Result.success(${table.entityPath}Service.page(page,queryWrapper));
    }

}

#end